#!/bin/sh

export BORG_REPO=/run/media/phil/backup/borg-backup
export BORG_PASSCOMMAND='rbw get borg-passphrase'

usage() {
	cat <<EOF > /dev/stderr
Usage: $(basename $0) [hbli]
	h: help
	b: backup
	l: list
    m: mount
	i: info
EOF
	exit 1
}

# some helpers and error handling:
info() { 
	printf "\n[%s] %s\n\n" "$(date)" "$*" >&2
}

trap "echo [$(date)] Backup interrupted >&2; exit 2" INT TERM

backup() {
	info "Starting backup"

	# Backup the most important directories into an archive named after
	# the machine this script is currently running on:

	borg create						\
		--filter AME				\
		--list						\
		--stats						\
		--show-rc					\
		--compression lz4			\
		--exclude-caches			\
		--exclude *~				\
		--exclude *.pyc				\
		--exclude /home/phil/var/log\
		--exclude /home/phil/tmp	\
		--exclude /home/phil/src/aur/chroot\
		--exclude /home/phil/var/steam\
    --exclude-if-present '.nobackup' \
		\
		::'{hostname}-{now}'		\
		/home/phil					\

		backup_exit=$?

	info "Pruning repository"

	# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
	# archives of THIS machine. The '{hostname}-' prefix is very important to
	# limit prune's operation to this machine's archives and not apply to
	# other machines' archives also:

	borg prune						    \
		--list						    \
		--glob-archives '{hostname}-'	\
		--show-rc					    \
		--keep-hourly	6			    \
		--keep-daily	7			    \
		--keep-weekly   4			    \
		--keep-monthly  12			    \
		--keep-yearly   6			    \

	prune_exit=$?

	# use highest exit code as global exit code
	global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

	if [ ${global_exit} -eq 1 ];
	then
		info "Backup and/or Prune finished with a warning"
	fi

	if [ ${global_exit} -gt 1 ];
	then
		info "Backup and/or Prune finished with an error"
	fi

}

archivemount() {
    echo To be implemented
}

main() {
	case $1 in
		b) sudo -E backup ;;
		l) sudo -E borg list $BORG_REPO ;;
		i) sudo -E borg info $BORG_REPO ;;
        m) archivemount ;;
		*) usage ;;
	esac
}

main $@
